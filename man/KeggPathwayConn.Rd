% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/KeggPathwayConn.R
\name{KeggPathwayConn}
\alias{KeggPathwayConn}
\title{The connector class to KEGG Pathway database.}
\description{
The connector class to KEGG Pathway database.

The connector class to KEGG Pathway database.
}
\details{
This is a concrete connector class. It must never be instantiated directly,
but instead be instantiated through the factory \code{BiodbFactory}.
Only specific methods are described here. See super classes for the
description of inherited methods.
}
\examples{
# Create an instance with default settings:
mybiodb <- biodb::newInst()

# Get connector
conn=mybiodb$getFactory()$createConn('kegg.pathway')

# Retrieve all reactions related to a mouse pathway:
reactions=conn$getReactions('mmu00260')

# Get a pathway graph
graph=conn$buildPathwayGraph('mmu00260')

# Terminate instance.
mybiodb$terminate()

}
\seealso{
\code{\link{KeggConn}}.
}
\section{Super classes}{
\code{\link[biodb:BiodbConnBase]{biodb::BiodbConnBase}} -> \code{\link[biodb:BiodbConn]{biodb::BiodbConn}} -> \code{biodbKegg::KeggConn} -> \code{KeggPathwayConn}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-KeggPathwayConn-new}{\code{KeggPathwayConn$new()}}
\item \href{#method-KeggPathwayConn-getReactions}{\code{KeggPathwayConn$getReactions()}}
\item \href{#method-KeggPathwayConn-convertToOrgPathways}{\code{KeggPathwayConn$convertToOrgPathways()}}
\item \href{#method-KeggPathwayConn-buildPathwayGraph}{\code{KeggPathwayConn$buildPathwayGraph()}}
\item \href{#method-KeggPathwayConn-getPathwayIgraph}{\code{KeggPathwayConn$getPathwayIgraph()}}
\item \href{#method-KeggPathwayConn-getDecoratedGraphPicture}{\code{KeggPathwayConn$getDecoratedGraphPicture()}}
\item \href{#method-KeggPathwayConn-extractPathwayMapShapes}{\code{KeggPathwayConn$extractPathwayMapShapes()}}
\item \href{#method-KeggPathwayConn-clone}{\code{KeggPathwayConn$clone()}}
}
}
\if{html}{\out{
<details><summary>Inherited methods</summary>
<ul>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getBaseUrl"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getBaseUrl'><code>biodb::BiodbConnBase$getBaseUrl()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getConnClass"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getConnClass'><code>biodb::BiodbConnBase$getConnClass()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getConnClassName"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getConnClassName'><code>biodb::BiodbConnBase$getConnClassName()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getDbClass"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getDbClass'><code>biodb::BiodbConnBase$getDbClass()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getEntryClass"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getEntryClass'><code>biodb::BiodbConnBase$getEntryClass()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getEntryClassName"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getEntryClassName'><code>biodb::BiodbConnBase$getEntryClassName()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getEntryContentType"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getEntryContentType'><code>biodb::BiodbConnBase$getEntryContentType()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getEntryFileExt"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getEntryFileExt'><code>biodb::BiodbConnBase$getEntryFileExt()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getEntryIdField"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getEntryIdField'><code>biodb::BiodbConnBase$getEntryIdField()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getName"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getName'><code>biodb::BiodbConnBase$getName()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getPropSlots"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getPropSlots'><code>biodb::BiodbConnBase$getPropSlots()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getPropValSlot"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getPropValSlot'><code>biodb::BiodbConnBase$getPropValSlot()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getPropertyValue"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getPropertyValue'><code>biodb::BiodbConnBase$getPropertyValue()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getSchedulerNParam"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getSchedulerNParam'><code>biodb::BiodbConnBase$getSchedulerNParam()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getSchedulerTParam"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getSchedulerTParam'><code>biodb::BiodbConnBase$getSchedulerTParam()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getToken"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getToken'><code>biodb::BiodbConnBase$getToken()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getUrl"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getUrl'><code>biodb::BiodbConnBase$getUrl()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getUrls"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getUrls'><code>biodb::BiodbConnBase$getUrls()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getWsUrl"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getWsUrl'><code>biodb::BiodbConnBase$getWsUrl()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="getXmlNs"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-getXmlNs'><code>biodb::BiodbConnBase$getXmlNs()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="hasProp"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-hasProp'><code>biodb::BiodbConnBase$hasProp()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="hasPropSlot"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-hasPropSlot'><code>biodb::BiodbConnBase$hasPropSlot()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="isSlotProp"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-isSlotProp'><code>biodb::BiodbConnBase$isSlotProp()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="propExists"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-propExists'><code>biodb::BiodbConnBase$propExists()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="setBaseUrl"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-setBaseUrl'><code>biodb::BiodbConnBase$setBaseUrl()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="setPropValSlot"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-setPropValSlot'><code>biodb::BiodbConnBase$setPropValSlot()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="setPropertyValue"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-setPropertyValue'><code>biodb::BiodbConnBase$setPropertyValue()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="setSchedulerNParam"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-setSchedulerNParam'><code>biodb::BiodbConnBase$setSchedulerNParam()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="setSchedulerTParam"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-setSchedulerTParam'><code>biodb::BiodbConnBase$setSchedulerTParam()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="setToken"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-setToken'><code>biodb::BiodbConnBase$setToken()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="setUrl"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-setUrl'><code>biodb::BiodbConnBase$setUrl()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="setWsUrl"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-setWsUrl'><code>biodb::BiodbConnBase$setWsUrl()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConnBase" data-id="updatePropertiesDefinition"><a href='../../biodb/html/BiodbConnBase.html#method-BiodbConnBase-updatePropertiesDefinition'><code>biodb::BiodbConnBase$updatePropertiesDefinition()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="addNewEntry"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-addNewEntry'><code>biodb::BiodbConn$addNewEntry()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="allowEditing"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-allowEditing'><code>biodb::BiodbConn$allowEditing()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="allowWriting"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-allowWriting'><code>biodb::BiodbConn$allowWriting()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="annotateMzValues"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-annotateMzValues'><code>biodb::BiodbConn$annotateMzValues()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="checkDb"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-checkDb'><code>biodb::BiodbConn$checkDb()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="collapseResultsDataFrame"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-collapseResultsDataFrame'><code>biodb::BiodbConn$collapseResultsDataFrame()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="correctIds"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-correctIds'><code>biodb::BiodbConn$correctIds()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="deleteAllCacheEntries"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-deleteAllCacheEntries'><code>biodb::BiodbConn$deleteAllCacheEntries()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="deleteAllEntriesFromPersistentCache"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-deleteAllEntriesFromPersistentCache'><code>biodb::BiodbConn$deleteAllEntriesFromPersistentCache()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="deleteAllEntriesFromVolatileCache"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-deleteAllEntriesFromVolatileCache'><code>biodb::BiodbConn$deleteAllEntriesFromVolatileCache()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="deleteWholePersistentCache"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-deleteWholePersistentCache'><code>biodb::BiodbConn$deleteWholePersistentCache()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="disallowEditing"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-disallowEditing'><code>biodb::BiodbConn$disallowEditing()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="disallowWriting"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-disallowWriting'><code>biodb::BiodbConn$disallowWriting()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="download"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-download'><code>biodb::BiodbConn$download()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="editingIsAllowed"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-editingIsAllowed'><code>biodb::BiodbConn$editingIsAllowed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="filterEntriesOnRt"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-filterEntriesOnRt'><code>biodb::BiodbConn$filterEntriesOnRt()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getAllCacheEntries"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getAllCacheEntries'><code>biodb::BiodbConn$getAllCacheEntries()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getAllVolatileCacheEntries"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getAllVolatileCacheEntries'><code>biodb::BiodbConn$getAllVolatileCacheEntries()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getBiodb"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getBiodb'><code>biodb::BiodbConn$getBiodb()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getCacheFile"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getCacheFile'><code>biodb::BiodbConn$getCacheFile()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getCacheId"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getCacheId'><code>biodb::BiodbConn$getCacheId()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getChromCol"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getChromCol'><code>biodb::BiodbConn$getChromCol()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getDownloadPath"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getDownloadPath'><code>biodb::BiodbConn$getDownloadPath()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getEntry"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getEntry'><code>biodb::BiodbConn$getEntry()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getEntryContent"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getEntryContent'><code>biodb::BiodbConn$getEntryContent()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getEntryContentFromDb"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getEntryContentFromDb'><code>biodb::BiodbConn$getEntryContentFromDb()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getEntryContentRequest"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getEntryContentRequest'><code>biodb::BiodbConn$getEntryContentRequest()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getEntryIds"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getEntryIds'><code>biodb::BiodbConn$getEntryIds()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getEntryImageUrl"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getEntryImageUrl'><code>biodb::BiodbConn$getEntryImageUrl()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getEntryPageUrl"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getEntryPageUrl'><code>biodb::BiodbConn$getEntryPageUrl()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getId"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getId'><code>biodb::BiodbConn$getId()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getMatchingMzField"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getMatchingMzField'><code>biodb::BiodbConn$getMatchingMzField()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getMzValues"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getMzValues'><code>biodb::BiodbConn$getMzValues()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getNbEntries"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getNbEntries'><code>biodb::BiodbConn$getNbEntries()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getNbPeaks"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getNbPeaks'><code>biodb::BiodbConn$getNbPeaks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="getSearchableFields"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-getSearchableFields'><code>biodb::BiodbConn$getSearchableFields()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="isCompounddb"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-isCompounddb'><code>biodb::BiodbConn$isCompounddb()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="isDownloadable"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-isDownloadable'><code>biodb::BiodbConn$isDownloadable()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="isDownloaded"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-isDownloaded'><code>biodb::BiodbConn$isDownloaded()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="isEditable"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-isEditable'><code>biodb::BiodbConn$isEditable()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="isExtracted"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-isExtracted'><code>biodb::BiodbConn$isExtracted()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="isMassdb"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-isMassdb'><code>biodb::BiodbConn$isMassdb()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="isRemotedb"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-isRemotedb'><code>biodb::BiodbConn$isRemotedb()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="isSearchableByField"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-isSearchableByField'><code>biodb::BiodbConn$isSearchableByField()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="isWritable"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-isWritable'><code>biodb::BiodbConn$isWritable()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="makeRequest"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-makeRequest'><code>biodb::BiodbConn$makeRequest()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="makesRefToEntry"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-makesRefToEntry'><code>biodb::BiodbConn$makesRefToEntry()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="msmsSearch"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-msmsSearch'><code>biodb::BiodbConn$msmsSearch()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="print"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-print'><code>biodb::BiodbConn$print()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="requiresDownload"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-requiresDownload'><code>biodb::BiodbConn$requiresDownload()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="searchByName"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-searchByName'><code>biodb::BiodbConn$searchByName()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="searchCompound"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-searchCompound'><code>biodb::BiodbConn$searchCompound()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="searchForEntries"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-searchForEntries'><code>biodb::BiodbConn$searchForEntries()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="searchForMassSpectra"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-searchForMassSpectra'><code>biodb::BiodbConn$searchForMassSpectra()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="searchMsEntries"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-searchMsEntries'><code>biodb::BiodbConn$searchMsEntries()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="searchMsPeaks"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-searchMsPeaks'><code>biodb::BiodbConn$searchMsPeaks()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="searchMzRange"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-searchMzRange'><code>biodb::BiodbConn$searchMzRange()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="searchMzTol"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-searchMzTol'><code>biodb::BiodbConn$searchMzTol()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="setDownloadedFile"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-setDownloadedFile'><code>biodb::BiodbConn$setDownloadedFile()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="setEditingAllowed"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-setEditingAllowed'><code>biodb::BiodbConn$setEditingAllowed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="setMatchingMzField"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-setMatchingMzField'><code>biodb::BiodbConn$setMatchingMzField()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="setWritingAllowed"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-setWritingAllowed'><code>biodb::BiodbConn$setWritingAllowed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="write"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-write'><code>biodb::BiodbConn$write()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodb" data-topic="BiodbConn" data-id="writingIsAllowed"><a href='../../biodb/html/BiodbConn.html#method-BiodbConn-writingIsAllowed'><code>biodb::BiodbConn$writingIsAllowed()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodbKegg" data-topic="KeggConn" data-id="wsFind"><a href='../../biodbKegg/html/KeggConn.html#method-KeggConn-wsFind'><code>biodbKegg::KeggConn$wsFind()</code></a></span></li>
<li><span class="pkg-link" data-pkg="biodbKegg" data-topic="KeggConn" data-id="wsList"><a href='../../biodbKegg/html/KeggConn.html#method-KeggConn-wsList'><code>biodbKegg::KeggConn$wsList()</code></a></span></li>
</ul>
</details>
}}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KeggPathwayConn-new"></a>}}
\if{latex}{\out{\hypertarget{method-KeggPathwayConn-new}{}}}
\subsection{Method \code{new()}}{
New instance initializer. Connector classes must not be instantiated
directly. Instead, you must use the createConn() method of the factory class.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KeggPathwayConn$new(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{All parameters are passed to the super class initializer.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KeggPathwayConn-getReactions"></a>}}
\if{latex}{\out{\hypertarget{method-KeggPathwayConn-getReactions}{}}}
\subsection{Method \code{getReactions()}}{
Retrieves all reactions part of a KEGG pathway. Connects to
    KEGG databases, and walk through all pathways submitted, and
    their modules, to find all reactions they are composed of.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KeggPathwayConn$getReactions(id, drop = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{A character vector of entry IDs.}

\item{\code{drop}}{If set to TRUE, returns a single KEGG reaction object
instead of a list, if the list contains only one element.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of KEGG reaction objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KeggPathwayConn-convertToOrgPathways"></a>}}
\if{latex}{\out{\hypertarget{method-KeggPathwayConn-convertToOrgPathways}{}}}
\subsection{Method \code{convertToOrgPathways()}}{
Takes a list of pathways IDs and converts them to the specified organism,
filtering out the ones that do not exist in KEGG.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KeggPathwayConn$convertToOrgPathways(id, org)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{A character vector of entry IDs.}

\item{\code{org}}{The organism in which to search for pathways, as a KEGG organism
code (3-4 letters code, like 'hsa', 'mmu', ...). See
https //www.genome.jp/kegg/catalog/org_list.html for a complete list of KEGG
organism codes.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A character vector, the same length as `id`, containing the
converted IDs.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KeggPathwayConn-buildPathwayGraph"></a>}}
\if{latex}{\out{\hypertarget{method-KeggPathwayConn-buildPathwayGraph}{}}}
\subsection{Method \code{buildPathwayGraph()}}{
Builds a pathway graph in the form of two tables of vertices and edges,
using KEGG database.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KeggPathwayConn$buildPathwayGraph(id, directed = FALSE, drop = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{A character vector of KEGG pathway entry IDs.}

\item{\code{directed}}{If set to TRUE, use available direction information to
create directed edges, duplicating if necessary the vertices.}

\item{\code{drop}}{If set to TRUE and the output list contains only one element,
then the returned value is a single list of two data frames.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A named list whose names are the pathway IDs, and values are lists
containing two data frames named vertices and edges.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KeggPathwayConn-getPathwayIgraph"></a>}}
\if{latex}{\out{\hypertarget{method-KeggPathwayConn-getPathwayIgraph}{}}}
\subsection{Method \code{getPathwayIgraph()}}{
Builds a pathway graph, as an igraph object, using KEGG database.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KeggPathwayConn$getPathwayIgraph(id, directed = FALSE, drop = TRUE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{A character vector of KEGG pathway entry IDs.}

\item{\code{directed}}{If set to TRUE, use available direction information to
create directed edges, duplicating if necessary the vertices.}

\item{\code{drop}}{If set to TRUE and the output list contains only one element,
then the returned value is a single igraph object.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of igraph objects, or an empty list if the igraph library is
not available.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KeggPathwayConn-getDecoratedGraphPicture"></a>}}
\if{latex}{\out{\hypertarget{method-KeggPathwayConn-getDecoratedGraphPicture}{}}}
\subsection{Method \code{getDecoratedGraphPicture()}}{
Create a pathway graph picture, with some of its elements colorized.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KeggPathwayConn$getDecoratedGraphPicture(id, color2ids)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{A KEGG pathway ID.}

\item{\code{color2ids}}{A named list defining colors for entry IDs that are present
on the graph. The names of the list are standard color names. The values are
character vector of entry IDs.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
An image object or NULL if the package magick is not available.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KeggPathwayConn-extractPathwayMapShapes"></a>}}
\if{latex}{\out{\hypertarget{method-KeggPathwayConn-extractPathwayMapShapes}{}}}
\subsection{Method \code{extractPathwayMapShapes()}}{
Extracts shapes from a pathway map image.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KeggPathwayConn$extractPathwayMapShapes(id, color2ids)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id}}{A KEGG pathway ID.}

\item{\code{color2ids}}{A named list defining colors for entry IDs that are present
on the graph. The names of the list are standard color names. The values are
character vector of entry IDs.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A list of BiodbShape objects.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KeggPathwayConn-clone"></a>}}
\if{latex}{\out{\hypertarget{method-KeggPathwayConn-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KeggPathwayConn$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
